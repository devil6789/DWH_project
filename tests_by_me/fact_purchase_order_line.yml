version: 2

models:
  - name: fact_purchase_order_line
    tests: 
      - dbt_utils.equal_rowcount:
          compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
    columns:
      - name: purchase_order_line_key
        tests: 
          - not_null
          - unique
      
      - name: purchase_order_key
        tests:
          - not_null
          - relationships:
              to: ref('stg_fact_purchase_order')
              field: purchase_order_key
      
      - name: supplier_key
        tests:
          - not_null
          - relationships:
              to: ref('stg_dim_supplier')
              field: supplier_key
      
      - name: delivery_method_key
        tests:
          - not_null
          - relationships:
              to: ref('stg_dim_delivery_method')
              field: delivery_method_key
      
      - name: contact_person_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_person')
              field: person_key
      
      - name: product_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_product')
              field: product_key
      
      - name: package_type_key
        tests:
          - not_null
          - relationships:
              to: ref('dim_package_type')
              field: package_type_key
      
      - name: ordered_outers
        tests:
          - not_null
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "ordered_outers"

      - name: received_outers
        tests:
          - not_null
          - custom_test_equal_sum:
              compare_model: "`vit-lam-data.wide_world_importers.purchasing__purchase_order_lines`"
              compare_column: "received_outers"
      
      - name: ordered_amount
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: '= ordered_outers * expected_unit_price_per_outer'
      
      - name: received_amount
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: '= received_outers * expected_unit_price_per_outer'
      
      - name: is_order_finalized
        tests:
          - not_null
          - accepted_values:
              values: ['Order Finalized', 'Not Order Finalized', 'Undefined']
      
      - name: is_order_line_finalized
        tests:
          - not_null
          - accepted_values:
              values: ['Order Line Finalized', 'Not Order Line Finalized', 'Undefined']

      
            